apply plugin: 'com.android.application'
apply from: 'tinkerpatch.gradle'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.wonium.utils"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 12
        versionName "0.1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.debug
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }

    signingConfigs {
        release {
            storeFile rootProject.file("keystore/Android.keystore")
            storePassword 'Wangpeiming110'
            keyAlias 'android.keystore'
            keyPassword 'Wangpeiming110'
        }

        debug {
            storeFile rootProject.file("keystore/debug.keystore")
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    implementation project(':java-extension-utils-android')
    implementation 'ru.alexbykov:nopermission:1.1.2'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    compileOnly("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    //tinker的核心库
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:${TINKERPATCH_VERSION}") { changing = true }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
